{"version":3,"sources":["Components/TextBox.js","Components/Actions.js","Components/Avatar.js","Components/EnemyBox.js","Components/PlayerBox.js","Components/PlayAgain.js","utils/helper.js","utils/characters.js","App.js","index.js"],"names":["TextBox","className","this","props","messageOne","messageTwo","Component","Actions","amount","effect","nbBlockedRounds","isBlock","isFrontPlayer","action","name","disabledAction","frontPlayer","onClick","isBlocked","expectedEffect","Avatar","faint","isHit","undefined","animation","src","process","logoName","alt","EnemyBox","percentage","enemy","hp","maxHp","id","role","style","width","aria-valuemin","aria-valuemax","expectedAction","toLowerCase","PlayerBox","me","isSelectable","player","aria-valuenow","PlayAgain","handlePlayAgain","decrementBlockedSkill","players","i","length","j","actions","characters","level","duration","textMessageOne","textMessageTwo","playerActionSelectable","round","gameOver","App","enemyTurn","state","playerSelected","selectPlayer","actionEffect","playersToKeep","push","num","_","last","Math","floor","random","includes","setState","setTimeout","checkIfPlayerAlive","idPlayerMove","positionToAdd","startingPlayers","slice","cloneDeep","endingPlayers","remove","concat","enemyMovementAction","idSkillBlock","enemyBlockAction","prevState","handleClickOnPlayerToAction","playerHeal","newHp","find","playerHealAction","playerMove","playerMovementAction","handleClickOnActionBar","nextEnemyAction","enemyAction","idPlayerSelected","map","key","Object","keys","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aa3eb8a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TextBox extends Component {\n  render() {\n    return (\n      <div className=\"battle-text-content\">\n        <p>\n          {this.props.messageOne} <br /> {this.props.messageTwo}\n        </p>\n      </div>\n    );\n  }\n}\n\nTextBox.propTypes = {\n  messageOne: PropTypes.string,\n  messageTwo: PropTypes.string,\n}\n\nexport default TextBox;\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Actions extends Component {\r\n  expectedEffect(amount, effect) {\r\n    switch (effect) {\r\n      case \"melee\":\r\n        return <> <i className=\"fas fa-fist-raised\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"range\":\r\n        return <> <i className=\"fas fa-bolt\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"heal\":\r\n        return <> <i className=\"fas fa-hand-holding-medical\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"movement\":\r\n        return <> <i className=\"fas fa-shoe-prints\"/></>;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  isBlocked(nbBlockedRounds, isBlock) {\r\n    if (nbBlockedRounds > 0) {\r\n      return <>(<span className=\"small\">{isBlock}</span> <i className=\"fas fa-lock\"/>) </>;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  disabledAction(isFrontPlayer, effect, isBlock) {\r\n    return (effect === \"melee\" && !isFrontPlayer) || isBlock !== 0 ? \"disabled\" : \"\";\r\n  }\r\n\r\n  render() {\r\n    const { name, amount, effect, isBlock } = this.props.action;\r\n\r\n    return (\r\n      <div className={`attack-container btn ${this.disabledAction(this.props.frontPlayer, effect, isBlock)}`}>\r\n        <div>\r\n          <span\r\n            className=\"move-pointer\"\r\n            onClick={() => {\r\n              if (this.disabledAction(this.props.frontPlayer, effect, isBlock) === \"\") {\r\n                this.props.onClick(this.props.action);\r\n              }\r\n            }}\r\n            >\r\n            {this.isBlocked(isBlock, isBlock)}{name}{this.expectedEffect(amount, effect)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nActions.propTypes = {\r\n  action: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    amount: PropTypes.number,\r\n    effect: PropTypes.string,\r\n    isBlock: PropTypes.number,\r\n  }),\r\n  frontPlayer: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Actions;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Avatar extends Component {\n  animation() {\n    const { faint, isHit } = this.props;\n\n    if (isHit === true) {\n      return \"animated headShake\";\n    }\n    if (faint === true) {\n      return \"animated fadeOut slow\";\n    }\n    if (faint === null) {\n      return \"animated fadeInUp\";\n    }\n    if (faint === undefined) {\n      return \"hide\";\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.animation()}>\n        <img className={this.props.className} src={process.env.PUBLIC_URL+\"/img/\"+this.props.logoName+\".png\"} alt={this.props.logoName} />\n      </div>\n    );\n  }\n}\n\nAvatar.propTypes = {\n  faint: PropTypes.bool,\n  isHit: PropTypes.bool,\n  logoName: PropTypes.string,\n  className: PropTypes.string,\n}\n\nexport default Avatar;\n","import React, { Component } from \"react\";\nimport Avatar from \"./Avatar\";\nimport PropTypes from \"prop-types\";\n\nexport class EnemyBox extends Component {\n  expectedAction(action) {\n    if (action !== undefined) {\n      switch (action.effect) {\n        case \"melee\":\n          return <><i className=\"fas fa-fist-raised\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"range\":\n          return <><i className=\"fas fa-bolt\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"heal\":\n          return <><i className=\"fas fa-hand-holding-medical\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"skill_block\":\n          return <><i className=\"fas fa-lock\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"movement\":\n          return <><i className=\"fas fa-wind\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"unknown\":\n          return <i className=\"fas fa-question\"/>;\n        default:\n          return <br />;\n      }\n    } else {\n      return <br />;\n    }\n  }\n\n  render() {\n    // calc enemy progress bar percentage based on HP\n    let percentage = (this.props.enemy.hp / this.props.enemy.maxHp) * 100 + \"%\";\n\n    return (\n      <div id=\"enemy-container\">\n        {/* ENEMY POKEMON INFO BOX */}\n        <div id=\"enemy-info-box\">\n          <div className=\"justify-content-between align-items-center\">\n            <h2>{this.props.enemy.name}</h2>\n          </div>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"progress both-progress\">\n              <div\n                className=\"progress-bar bg-danger\"\n                role=\"progressbar\"\n                style={{ width: percentage }}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              />\n              <div className=\"hp-progress-bar\">\n                <span>{this.props.enemy.hp}/{this.props.enemy.maxHp}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* END ENEMY POKEMON INFO BOX */}\n        <div className=\"action-intention\">\n          {this.expectedAction(this.props.expectedAction)}\n        </div>\n        {/* ENEMY POKEMON AVATAR PICTURE */}\n        <div className=\"avatar-box\">\n          <Avatar\n            faint={this.props.enemy.faint}\n            isHit={this.props.enemy.isHit}\n            logoName={this.props.enemy.name.toLowerCase()}\n            className=\"avatar mt-4\"\n          />\n          <div className=\"oval\" />\n        </div>\n        {/* END ENEMY POKEMON AVATAR PICTURE */}\n      </div>\n    );\n  }\n}\n\nEnemyBox.propTypes = {\n  enemy: PropTypes.shape({\n    name: PropTypes.string,\n    level: PropTypes.number,\n    hp: PropTypes.number,\n    maxHp: PropTypes.number,\n    faint: PropTypes.bool,\n    isHit: PropTypes.bool,\n    actions: PropTypes.array,\n  }),\n  expectedAction: PropTypes.shape({\n    name: PropTypes.string,\n    amount: PropTypes.number,\n    effect: PropTypes.string,\n  })\n}\n\nexport default EnemyBox;\n","import React, { Component } from \"react\";\nimport Avatar from \"./Avatar\";\nimport PropTypes from \"prop-types\";\n\nexport class PlayerBox extends Component {\n  expectedAction(me, isSelectable) {\n    if (isSelectable) {\n      return <i className=\"far fa-hand-point-down\"/>;\n    } else if (me) {\n      return <i className=\"fas fa-long-arrow-alt-down\"/>;\n    } else {\n      return <br />;\n    }\n  }\n\n  render() {\n    // calc player progress bar percentage based on HP\n    let percentage = (this.props.player.hp / this.props.player.maxHp) * 100 + \"%\";\n\n    return (\n      <div\n        id=\"hero-container\"\n        className={this.props.player.isSelectable ? \"hero-container-selected\" : null}\n        onClick={() => this.props.onClick(this.props.player)}\n      >\n        {/* HERO POKEMON INFO BOX */}\n        <div id=\"hero-info-box\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"progress both-progress\">\n              <div\n                className=\"progress-bar bg-danger\"\n                role=\"progressbar\"\n                style={{ width: percentage }}\n                aria-valuemin=\"0\"\n                aria-valuenow=\"75\"\n                aria-valuemax=\"100\"\n              />\n              <div className=\"hp-progress-bar\">\n                {this.props.player.hp}/{this.props.player.maxHp}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* END HERO POKEMON INFO BOX */}\n        <div className=\"action-intention\">\n          {this.expectedAction(this.props.player.me, this.props.player.isSelectable)}\n        </div>\n        {/* HERO POKEMON AVATAR PICTURE */}\n        <div className=\"avatar-box\">\n          <Avatar\n            faint={this.props.player.faint}\n            isHit={this.props.player.isHit}\n            logoName={this.props.player.name.toLowerCase()}\n            className=\"avatar mt-5\"\n          />\n          <div className={`oval ${this.props.player.isSelectable ? \"hero-oval-selected\" : \"\"}`} />\n        </div>\n        {/* END HERO POKEMON AVATAR PICTURE */}\n      </div>\n    );\n  }\n}\n\nPlayerBox.propTypes = {\n  player: PropTypes.shape({\n    name: PropTypes.string,\n    me: PropTypes.bool,\n    level: PropTypes.number,\n    hp: PropTypes.number,\n    maxHp: PropTypes.number,\n    faint: PropTypes.bool,\n    isHit: PropTypes.bool,\n    isSelectable: PropTypes.bool,\n    actions: PropTypes.array,\n  }),\n  onClick: PropTypes.func,\n}\n\nexport default PlayerBox;\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PlayAgain extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"battle-text-content\">\r\n        <p id=\"play-again-text\" onClick={() => this.props.handlePlayAgain()}>\r\n          Cliquez ici pour recommencer une partie\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayAgain.propTypes = {\r\n  handlePlayAgain: PropTypes.func,\r\n}\r\n\r\nexport default PlayAgain;\r\n","import _ from \"lodash\";\n\n// When a player heal an other player (or himself)\nexport const playerHealAction = (players, playerHeal, action) => {\n  for (let i = 0; i < players.length; i++) {\n    players[i] = { ...players[i], isSelectable: false };\n    if (playerHeal.name === players[i].name && action.effect === \"heal\") {\n      const newHp = (players[i].hp + action.amount) < players[i].maxHp\n        ? players[i].hp + action.amount\n        : players[i].maxHp\n      ;\n      players[i] = {...players[i], hp: newHp};\n    }\n  }\n\n  const textMessageOne = `${_.find(players, 'me').name}\n   utilise ${action.name} pour soigner ${playerHeal.name} de ${action.amount}pts de vie!`;\n\n  return {players, textMessageOne}\n}\n\n// When a player move from the battle\nexport const playerMovementAction = (players, playerMove) => {\n  let positionToAdd = 0;\n\n  for (let i = 0; i < players.length; i++) {\n    players[i] = { ...players[i], isSelectable: false };\n    if (playerMove.name === players[i].name) {\n      positionToAdd = i;\n    }\n  }\n\n  // Need know if front or behind the player selected\n  positionToAdd = _.find(_.slice(_.cloneDeep(players), 0, positionToAdd + 1), 'me')\n    ? positionToAdd + 1\n    : positionToAdd\n  ;\n  // cut on 2 array\n  const startingPlayers = _.slice(_.cloneDeep(players), 0, positionToAdd);\n  const endingPlayers = _.slice(_.cloneDeep(players), positionToAdd);\n  // remove me\n  _.remove(startingPlayers, 'me');\n  _.remove(endingPlayers, 'me');\n  // add me\n  startingPlayers.push(_.find(players, 'me'));\n  players = startingPlayers.concat(endingPlayers);\n\n  const textMessageOne = `${_.find(players, 'me').name} se positionne à la place de ${playerMove.name}.`;\n\n  return {players, textMessageOne}\n}\n\n// When an enemy move a player from the battle\nexport const enemyMovementAction = (players, idPlayerMove, enemy) => {\n  const textMessageOne = `${enemy.name} utilise ${enemy.expectedAction.name} sur ${players[idPlayerMove].name} et lui inflige ${enemy.expectedAction.amount}pts de dégats.`;\n\n  players[idPlayerMove] = {\n    ...players[idPlayerMove],\n    isHit: true,\n    hp: (players[idPlayerMove].hp - enemy.expectedAction.amount <= 0 ? 0 : players[idPlayerMove].hp - enemy.expectedAction.amount)\n  };\n  // Need know if front or behind the player selected\n  const positionToAdd = players.length - 2;\n  // cut on 2 array\n  const startingPlayers = _.slice(_.cloneDeep(players), 0, positionToAdd);\n  const endingPlayers = _.slice(_.cloneDeep(players), positionToAdd);\n  // remove last player\n  _.remove(endingPlayers, {'name': players[idPlayerMove].name});\n  // and add him then\n  startingPlayers.push(players[idPlayerMove]);\n  players = startingPlayers.concat(endingPlayers);\n\n  return {players, textMessageOne}\n}\n\n// When an enemy bloc a skill of a player from the battle\nexport const enemyBlockAction = (players, idPlayerMove, enemy) => {\n  const idSkillBlock = Math.floor(Math.random() * players[idPlayerMove].actions.length)\n  const textMessageOne = `${enemy.name} utilise ${enemy.expectedAction.name} sur ${players[idPlayerMove].name}, lui inflige ${enemy.expectedAction.amount}pts de dégats et lui bloque la compétence ${players[idPlayerMove].actions[idSkillBlock].name} pour ${enemy.expectedAction.duration} tours.`;\n  const actions = [...players[idPlayerMove].actions];\n\n  actions[idSkillBlock] = {\n    ...actions[idSkillBlock],\n    isBlock: enemy.expectedAction.duration,\n  }\n\n  players[idPlayerMove] = {\n    ...players[idPlayerMove],\n    isHit: true,\n    hp: (players[idPlayerMove].hp - enemy.expectedAction.amount <= 0 ? 0 : players[idPlayerMove].hp - enemy.expectedAction.amount),\n    actions,\n  };\n\n  return {players, textMessageOne}\n}\n\n// When a turn is ended and decrement all blocked skills players\nexport const decrementBlockedSkill = (players) => {\n  for(let i = 0; i < players.length; i++) {\n    for(let j = 0; j < players[i].actions.length; j++) {\n      players[i].actions[j].isBlock = players[i].actions[j].isBlock === 0 ? 0 : players[i].actions[j].isBlock - 1;\n    }\n  }\n\n  return players;\n}\n\n// When an enemy select a player\nexport const selectPlayer = (players, actionEffect) => {\n  let playersToKeep = [];\n  for (let i = 0; i < players.length; i++) {\n    if (players[i].hp > 0) {\n      playersToKeep.push(i);\n    }\n  }\n\n  const num = actionEffect === \"melee\" || actionEffect === \"movement\"\n    ? _.last(playersToKeep)\n    : Math.floor(Math.random() * players.length)\n  ;\n\n  return (!_.includes(playersToKeep, num)) ? selectPlayer(players, actionEffect) : 0;\n}","export const characters = {\n  players: [\n    {\n      name: \"Pikachu\",\n      me: false,\n      level: 50,\n      hp: 300,\n      maxHp: 300,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Coup de poing\", amount: 10, effect: \"melee\", isBlock: 0},\n        {name: \"Morsure\", amount: 30, effect: \"melee\", isBlock: 0},\n        {name: \"Eclair\", amount: 50, effect: \"range\", isBlock: 0},\n        {name: \"Soin éclair\", amount: 100, effect: \"heal\", isBlock: 0},\n        {name: \"Méga tonnerre\", amount: 100, effect: \"range\", isBlock: 0},\n        {name: \"Déplacement\", amount: null, effect: \"movement\", isBlock: 0},\n      ],\n    },\n    {\n      name: \"Emolga\",\n      me: false,\n      level: 45,\n      hp: 250,\n      maxHp: 250,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 10, effect: \"melee\", isBlock: 0},\n        {name: \"Eclair\", amount: 30, effect: \"melee\", isBlock: 0},\n        {name: \"Tonnerre\", amount: 35, effect: \"melee\", isBlock: 0},\n        {name: \"Méga éclair\", amount: 45, effect: \"melee\", isBlock: 0},\n      ],\n    },\n    {\n      name: \"Teddiursa\",\n      me: false,\n      level: 35,\n      hp: 150,\n      maxHp: 150,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 10, effect: \"melee\", isBlock: 0},\n        {name: \"Eclair\", amount: 30, effect: \"melee\", isBlock: 0},\n        {name: \"Tonnerre\", amount: 35, effect: \"melee\", isBlock: 0},\n        {name: \"Méga éclair\", amount: 45, effect: \"melee\", isBlock: 0},\n      ],\n    },\n    {\n      name: \"Togepi\",\n      me: false,\n      level: 40,\n      hp: 200,\n      maxHp: 200,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 10, effect: \"melee\", isBlock: 0},\n        {name: \"Eclair\", amount: 30, effect: \"melee\", isBlock: 0},\n        {name: \"Tonnerre\", amount: 35, effect: \"melee\", isBlock: 0},\n        {name: \"Méga éclair\", amount: 45, effect: \"melee\", isBlock: 0},\n      ],\n    },\n    {\n      name: \"Rondoudou\",\n      me: false,\n      level: 50,\n      hp: 300,\n      maxHp: 300,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 10, effect: \"melee\", isBlock: 0},\n        {name: \"Eclair\", amount: 30, effect: \"melee\", isBlock: 0},\n        {name: \"Tonnerre\", amount: 35, effect: \"melee\", isBlock: 0},\n        {name: \"Méga éclair\", amount: 45, effect: \"melee\", isBlock: 0},\n      ],\n    },\n  ],\n  enemy: {\n    name: \"Mewtwo\",\n    level: 60,\n    hp: 600,\n    maxHp: 600,\n    faint: undefined,\n    isHit: false,\n    actions: [\n      {name: \"Frappe\", amount: 50, effect: \"melee\"},\n      {name: \"Blocage de l'ombre\", amount: 40, effect: \"skill_block\", duration: 5},\n      {name: \"Bouclier de l'ombre\", amount: 50, effect: \"heal\"},\n      {name: \"Poussée du chaos\", amount: 30, effect: \"movement\"},\n      {name: \"Rêve éveillé\", amount: 100, effect: \"range\"},\n      {name: \"Cauchemard\", amount: 200, effect: \"unknown\"},\n    ],\n    expectedAction: undefined,\n  },\n  textMessageOne: \" \",\n  textMessageTwo: \"\",\n  playerActionSelectable: undefined,\n  round: 1,\n  gameOver: false\n};","import React, { Component } from 'react';\nimport \"./animate.css\";\nimport \"./bootstrap.css\";\nimport \"./App.css\";\nimport TextBox from \"./Components/TextBox\";\nimport Actions from \"./Components/Actions\";\nimport EnemyBox from \"./Components/EnemyBox\";\nimport PlayerBox from \"./Components/PlayerBox\";\nimport PlayAgain from \"./Components/PlayAgain\";\nimport _ from 'lodash';\nimport {enemyMovementAction, enemyBlockAction, decrementBlockedSkill, playerHealAction, playerMovementAction, selectPlayer} from \"./utils/helper\";\nimport { characters } from \"./utils/characters\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = characters;\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState(\n        () => {\n          return {\n            textMessageOne: `${this.state.enemy.name} apparait!`,\n            enemy: {\n              ...this.state.enemy,\n              faint: null,\n            },\n          };\n        },\n        () => {\n          setTimeout(() => {\n            const players = [...this.state.players];\n            for (let i = 0; i < this.state.players.length; i++) {\n              players[i] = { ...players[i], faint: null };\n              // Me\n              if (i === 0) {\n                players[i] = { ...players[i], me: true };\n              }\n            }\n\n            this.setState(\n              {\n                textMessageOne: \"Vous entrez pour le combattre !\",\n                players\n              },\n              () => {\n                setTimeout(() => {\n                  this.setState({\n                    textMessageOne: \"\"\n                  });\n\n                  this.nextEnemyAction();\n                }, 3000);\n              }\n            );\n          }, 3000);\n        }\n      );\n    }, 1000);\n  }\n\n  nextEnemyAction() {\n    const enemyAction = Math.floor(Math.random() * this.state.enemy.actions.length);\n\n    this.setState({\n      enemy: {\n        ...this.state.enemy,\n        expectedAction: this.state.enemy.actions[enemyAction],\n      }\n    })\n  }\n\n  checkIfPlayerAlive(idPlayerSelected) {\n    const players = [...this.state.players];\n\n    if (players[idPlayerSelected].hp === 0) {\n      players[idPlayerSelected] = {...players[idPlayerSelected], faint: true, isHit: false};\n      this.setState(\n        {\n          textMessageOne: `${players[idPlayerSelected].name} a été terrassé.`,\n          players\n        },\n        () => {\n          setTimeout(() => {\n            //All players dead\n            const allPlayersDead = _.find(players, (player) => {\n              return player.hp > 0\n            });\n            if (!allPlayersDead) {\n              this.setState(\n                {\n                  textMessageOne: `Toute l'équipe a perdu.`,\n                  textMessageTwo: `${this.state.enemy.name} a gagné!`,\n                },\n                () => {\n                  setTimeout(() => {\n                    this.setState({\n                      gameOver: true\n                    });\n                  }, 3000);\n                }\n              );\n            } else {\n              this.setState({\n                textMessageOne: \"\",\n                round: this.state.round + 1,\n                players: decrementBlockedSkill(players),\n              });\n              this.nextEnemyAction();\n            }\n          }, 3000);\n        }\n      );\n    } else {\n      players[idPlayerSelected] = {...players[idPlayerSelected], isHit: false, faint: false};\n      this.setState({\n        textMessageOne: \"\",\n        round: this.state.round + 1,\n        players: decrementBlockedSkill(players),\n      });\n      this.nextEnemyAction();\n    }\n  }\n\n  enemyTurn = () => {\n    const { amount, name, effect } = this.state.enemy.expectedAction;\n    const playerSelected = selectPlayer(this.state.players, effect);\n\n    // 1 - ENEMY DEAD\n    if (this.state.enemy.hp === 0) {\n      this.setState(\n        {\n          textMessageOne: `${this.state.enemy.name} a perdu.`,\n          textMessageTwo: `Vous avez gagné!`,\n          enemy: {\n            ...this.state.enemy,\n            faint: true,\n            isHit: false,\n          },\n        },\n        () => {\n          setTimeout(() => {\n            this.setState({\n              gameOver: true\n            });\n          }, 3000);\n        }\n      );\n    // 2 - ENEMY ACTIONS\n    } else {\n      if (effect === \"heal\") {\n        this.setState(\n          {\n            textMessageOne: `${this.state.enemy.name} se soigne pour ${amount}pts de vie.`,\n            enemy: {\n              ...this.state.enemy,\n              hp: this.state.enemy.hp + amount,\n            },\n          },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                textMessageOne: \"\"\n              });\n              this.checkIfPlayerAlive(playerSelected);\n            }, 3000);\n          }\n        );\n      } else if (effect === \"movement\") {\n        let { players, textMessageOne } = enemyMovementAction(this.state.players, playerSelected, this.state.enemy);\n        this.setState(\n          {\n            textMessageOne,\n            players\n          },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                textMessageOne: \"\"\n              });\n              this.checkIfPlayerAlive(playerSelected);\n            }, 3000);\n          }\n        );\n      } else if (effect === \"skill_block\") {\n        let { players, textMessageOne } = enemyBlockAction(this.state.players, playerSelected, this.state.enemy);\n        this.setState(\n          {\n            textMessageOne,\n            players\n          },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                textMessageOne: \"\"\n              });\n              this.checkIfPlayerAlive(playerSelected);\n            }, 3000);\n          }\n        );\n      } else {\n        this.setState(\n          prevState => {\n            const players = [...this.state.players];\n            players[playerSelected] = {\n              ...players[playerSelected],\n              isHit: true,\n              hp: (prevState.players[playerSelected].hp - amount <= 0 ? 0 : prevState.players[playerSelected].hp - amount)\n            };\n\n            return {\n              players,\n              textMessageOne: `${\n                this.state.enemy.name\n              } utilise ${name} sur ${this.state.players[playerSelected].name} pour ${amount}pts de dégats!`\n            };\n          },\n          () => {\n            setTimeout(() => {\n              this.checkIfPlayerAlive(playerSelected);\n            }, 3000);\n          }\n        );\n      }\n    }\n  }\n\n  handleClickOnPlayerToAction = (player) => {\n    const { playerActionSelectable } = this.state;\n\n    if (playerActionSelectable.effect === \"heal\") {\n      let { players, textMessageOne } = playerHealAction([...this.state.players], player, playerActionSelectable);\n      this.setState({\n        textMessageOne,\n        players\n      });\n    } else if (playerActionSelectable.effect === \"movement\") {\n      let { players, textMessageOne } = playerMovementAction([...this.state.players], player);\n      this.setState({\n        textMessageOne,\n        players\n      });\n    }\n    //2 - ENEMY TURN\n    setTimeout(() => {\n      this.setState({\n        playerActionSelectable: undefined,\n      });\n      this.enemyTurn();\n    }, 3000);\n  }\n\n  handleClickOnActionBar = (action) => {\n    const { effect, name, amount } = action;\n\n    // 1 - ATTACK\n    if (effect === \"melee\" || effect === \"range\") {\n      // 1.1 - PLAYER ACTION\n      this.setState({\n        enemy: {\n          ...this.state.enemy,\n          hp: (this.state.enemy.hp - amount <= 0 ? 0 : this.state.enemy.hp - amount),\n          isHit: true,\n        },\n        textMessageOne: `${\n          _.find(this.state.players, 'me').name\n        } utilise ${name} pour ${amount}pts de dégats!`\n      });\n      // 1.2 - ENEMY ACTION\n      setTimeout(() => {\n        // Enemy turn\n        this.setState({\n          enemy: {\n            ...this.state.enemy,\n            isHit: false,\n            faint: false,\n          }\n        });\n        this.enemyTurn();\n      }, 3000);\n    // 2 - HEAL\n    } else if (effect === \"heal\") {\n      // 2.1 - PLAYER ACTION\n      const players = [...this.state.players];\n      for (let i = 0; i < this.state.players.length; i++) {\n        if(this.state.players[i].hp > 0) {\n          players[i] = { ...players[i], isSelectable: true };\n        }\n      }\n      this.setState({\n        textMessageOne: \"Veuillez selectionner un joueur à soigner.\",\n        playerActionSelectable: action,\n        players\n      });\n    // 3 - MOVEMENT\n    } else if (effect === \"movement\") {\n      // 3.1 - PLAYER ACTION\n      const players = [...this.state.players];\n      for (let i = 0; i < this.state.players.length; i++) {\n        if(this.state.players[i] !== _.find(this.state.players, 'me') && this.state.players[i].hp > 0) {\n          players[i] = { ...players[i], isSelectable: true };\n        }\n      }\n      this.setState({\n        textMessageOne: \"Veuillez selectionner la place que vous souhaitez.\",\n        playerActionSelectable: action,\n        players\n      });\n    }\n  }\n\n  handlePlayAgain = () => {\n    const players = [...this.state.players];\n    for (let i = 0; i < this.state.players.length; i++) {\n      players[i] = { ...players[i], faint: false, isHit: false, hp: this.state.players[i].maxHp };\n    }\n\n    this.setState({\n      enemy: {\n        ...this.state.enemy,\n        hp: this.state.enemy.maxHp,\n        faint: false,\n        isHit: false,\n      },\n      gameOver: false,\n      textMessageOne: \"\",\n      textMessageTwo: \"\",\n      round: 1,\n      players\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row row h-100 justify-content-center align-items-center\">\n          <div className=\"col-sm-12\">\n            {/* BATTLE SCREEN CONTAINER */}\n            <div id=\"battle-container\" className=\"px-2 mx-auto\">\n              <div id=\"turn-text-number\"><i className=\"fas fa-dice\"/> Tour {this.state.round}</div>\n              <div className=\"all-players-box\">\n                {_.map(this.state.players, player => (\n                  <PlayerBox\n                    key={player.name}\n                    player={player}\n                    onClick={player.isSelectable ? this.handleClickOnPlayerToAction : () => { return null }}\n                  />\n                ))}\n\n                <EnemyBox\n                  enemy={this.state.enemy}\n                  expectedAction={this.state.enemy.expectedAction}\n                />\n              </div>\n\n              {/* TEXT BOX SECTION */}\n              <div id=\"text-box\">\n                <div id=\"text-box-content\">\n                  {this.state.textMessageOne !== \"\" &&\n                  this.state.gameOver === false && (\n                    <TextBox\n                      messageOne={this.state.textMessageOne}\n                      messageTwo={this.state.textMessageTwo}\n                    />\n                  )}\n\n                  {this.state.textMessageOne === \"\" &&\n                  this.state.gameOver === false &&\n                  Object.keys(_.find(this.state.players, 'me').actions).map((key, index) => {\n                    return (\n                      <Actions\n                        key={key}\n                        frontPlayer={_.find(this.state.players, 'me') === _.last(this.state.players)}\n                        action={_.find(this.state.players, 'me').actions[key]}\n                        onClick={this.handleClickOnActionBar}\n                      />\n                    );\n                  })}\n                  {this.state.gameOver === true && (\n                    <PlayAgain handlePlayAgain={this.handlePlayAgain} />\n                  )}\n                </div>\n              </div>\n              {/* END TEXT BOX SECTION */}\n            </div>\n            {/* END BATTLE SCREEN CONTAINER */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}