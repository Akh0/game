{"version":3,"sources":["Components/TextBox.js","Components/Actions.js","Components/Avatar.js","Components/EnemyBox.js","Components/PlayerBox.js","utils/helper.js","utils/characters.js","App.js","index.js"],"names":["TextBox","className","this","props","messageOne","messageTwo","Component","Actions","amount","effect","nbBlockedRounds","duration","isFrontPlayer","nbBlockedTurns","action","name","disabledAction","frontPlayer","onClick","isBlocked","expectedEffect","Avatar","faint","isHit","undefined","animation","src","process","logoName","alt","EnemyBox","percentage","enemy","hp","maxHp","id","role","style","width","aria-valuemin","aria-valuemax","expectedAction","toLowerCase","_","map","hot","index","key","dot","PlayerBox","me","isSelectable","player","aria-valuenow","userTakeDot","user","damages","i","length","userTakeHot","healing","playersTurnFinished","players","decrementBlockedSkill","decrementHotAndDot","enemyTurnFinished","j","actions","filter","aHot","aDot","characters","level","textMessageOne","textMessageTwo","playerActionSelectable","round","gameOver","App","enemyTurn","state","playerSelected","selectPlayer","actionEffect","playersToKeep","push","num","last","Math","floor","random","includes","checkIfEnemyAlive","setState","setTimeout","endTurn","idPlayerMove","positionToAdd","startingPlayers","slice","cloneDeep","endingPlayers","remove","concat","enemyMovementAction","checkIfPlayerAlive","idSkillBlock","enemyBlockAction","prevState","handleClickOnPlayerToAction","playerHeal","hotMessage","newHp","find","playerHealAction","playerMove","playerMovementAction","handleClickOnActionBar","nextEnemyAction","enemyAction","idPlayerSelected","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f93f695a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TextBox extends Component {\n  render() {\n    return (\n      <div className=\"battle-text-content\">\n        <p>\n          {this.props.messageOne} <br /> {this.props.messageTwo}\n        </p>\n      </div>\n    );\n  }\n}\n\nTextBox.propTypes = {\n  messageOne: PropTypes.string,\n  messageTwo: PropTypes.string,\n}\n\nexport default TextBox;\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Actions extends Component {\r\n  expectedEffect(amount, effect) {\r\n    switch (effect) {\r\n      case \"melee\":\r\n        return <> <i className=\"fas fa-fist-raised\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"range\":\r\n        return <> <i className=\"fas fa-bolt\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"dot\":\r\n        return <> <i className=\"fas fa-burn\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"heal\":\r\n        return <> <i className=\"fas fa-hand-holding-medical\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"hot\":\r\n        return <> <i className=\"fas fa-medkit\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"movement\":\r\n        return <> <i className=\"fas fa-shoe-prints\"/></>;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  isBlocked(nbBlockedRounds, duration) {\r\n    if (nbBlockedRounds > 0) {\r\n      return <span className=\"small\">({nbBlockedRounds} <i className=\"fas fa-lock\"/> <i className=\"fas fa-lock\"/>) </span>;\r\n    } else if (duration) {\r\n      return <span className=\"small\">({duration} <i className=\"fas fa-clock\"/>) </span>;\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  disabledAction(isFrontPlayer, effect, nbBlockedTurns) {\r\n    return (effect === \"melee\" && !isFrontPlayer) || nbBlockedTurns !== 0 ? \"disabled\" : \"\";\r\n  }\r\n\r\n  render() {\r\n    const { name, amount, effect, duration, nbBlockedTurns } = this.props.action;\r\n\r\n    return (\r\n      <div className={`attack-container btn ${this.disabledAction(this.props.frontPlayer, effect, nbBlockedTurns)}`}>\r\n        <div>\r\n          <span\r\n            className=\"move-pointer\"\r\n            onClick={() => {\r\n              if (this.disabledAction(this.props.frontPlayer, effect, nbBlockedTurns) === \"\") {\r\n                this.props.onClick(this.props.action);\r\n              }\r\n            }}\r\n            >\r\n            {this.isBlocked(nbBlockedTurns, duration)}{name}{this.expectedEffect(amount, effect)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nActions.propTypes = {\r\n  action: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    amount: PropTypes.number,\r\n    effect: PropTypes.string,\r\n    duration: PropTypes.number,\r\n    nbBlockedTurns: PropTypes.number,\r\n  }),\r\n  frontPlayer: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Actions;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Avatar extends Component {\n  animation() {\n    const { faint, isHit } = this.props;\n\n    if (isHit === true) {\n      return \"animated headShake\";\n    }\n    if (faint === true) {\n      return \"animated fadeOut slow\";\n    }\n    if (faint === null) {\n      return \"animated fadeInUp\";\n    }\n    if (faint === undefined) {\n      return \"hide\";\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.animation()}>\n        <img className={this.props.className} src={process.env.PUBLIC_URL+\"/img/\"+this.props.logoName+\".png\"} alt={this.props.logoName} />\n      </div>\n    );\n  }\n}\n\nAvatar.propTypes = {\n  faint: PropTypes.bool,\n  isHit: PropTypes.bool,\n  logoName: PropTypes.string,\n  className: PropTypes.string,\n}\n\nexport default Avatar;\n","import React, { Component } from \"react\";\nimport Avatar from \"./Avatar\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nexport class EnemyBox extends Component {\n  expectedAction(action) {\n    if (action !== undefined) {\n      switch (action.effect) {\n        case \"melee\":\n          return <><i className=\"fas fa-fist-raised\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"range\":\n          return <><i className=\"fas fa-bolt\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"dot\":\n          return <> <span className=\"small\">({action.duration} <i className=\"fas fa-clock\"/>)</span> <i className=\"fas fa-burn\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"heal\":\n          return <><i className=\"fas fa-hand-holding-medical\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"hot\":\n          return <> <span className=\"small\">({action.duration} <i className=\"fas fa-clock\"/>)</span> <i className=\"fas fa-hand-holding-medical\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"skill_block\":\n          return <><i className=\"fas fa-lock\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"movement\":\n          return <><i className=\"fas fa-wind\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"unknown\":\n          return <i className=\"fas fa-question\"/>;\n        default:\n          return <br />;\n      }\n    } else {\n      return <br />;\n    }\n  }\n\n  render() {\n    // calc enemy progress bar percentage based on HP\n    let percentage = (this.props.enemy.hp / this.props.enemy.maxHp) * 100 + \"%\";\n\n    return (\n      <div id=\"enemy-container\">\n        {/* ENEMY POKEMON INFO BOX */}\n        <div id=\"enemy-info-box\">\n          <div className=\"justify-content-between align-items-center\">\n            <h2>{this.props.enemy.name}</h2>\n          </div>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"progress both-progress\">\n              <div\n                className=\"progress-bar bg-danger\"\n                role=\"progressbar\"\n                style={{ width: percentage }}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              />\n              <div className=\"hp-progress-bar\">\n                <span>{this.props.enemy.hp}/{this.props.enemy.maxHp}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* END ENEMY POKEMON INFO BOX */}\n        <div className=\"action-intention\">\n          {this.expectedAction(this.props.expectedAction)}\n        </div>\n        {/* ENEMY POKEMON AVATAR PICTURE */}\n        <div className=\"avatar-box\">\n          <Avatar\n            faint={this.props.enemy.faint}\n            isHit={this.props.enemy.isHit}\n            logoName={this.props.enemy.name.toLowerCase()}\n            className=\"avatar mt-4\"\n          />\n          {!this.props.enemy.faint && _.map(this.props.enemy.hot, ({amount}, index) => (\n            <span key={index} className=\"small avatar-effect\">{amount}<i className=\"fas fa-medkit\"/></span>\n          ))}\n          {!this.props.enemy.faint && _.map(this.props.enemy.dot, ({amount}, index) => (\n            <span key={index} className=\"small avatar-effect\">{amount}<i className=\"fas fa-burn\"/></span>\n          ))}\n        </div>\n        {/* END ENEMY POKEMON AVATAR PICTURE */}\n      </div>\n    );\n  }\n}\n\nEnemyBox.propTypes = {\n  enemy: PropTypes.shape({\n    name: PropTypes.string,\n    level: PropTypes.number,\n    hp: PropTypes.number,\n    maxHp: PropTypes.number,\n    faint: PropTypes.bool,\n    isHit: PropTypes.bool,\n    actions: PropTypes.array,\n    dot: PropTypes.array,\n    hot: PropTypes.array,\n  }),\n  expectedAction: PropTypes.shape({\n    name: PropTypes.string,\n    amount: PropTypes.number,\n    effect: PropTypes.string,\n    duration: PropTypes.number,\n  })\n}\n\nexport default EnemyBox;\n","import React, { Component } from \"react\";\nimport Avatar from \"./Avatar\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nexport class PlayerBox extends Component {\n  expectedAction(me, isSelectable) {\n    if (isSelectable) {\n      return <i className=\"far fa-hand-point-down\"/>;\n    } else if (me) {\n      return <i className=\"fas fa-long-arrow-alt-down\"/>;\n    } else {\n      return <br />;\n    }\n  }\n\n  render() {\n    // calc player progress bar percentage based on HP\n    let percentage = (this.props.player.hp / this.props.player.maxHp) * 100 + \"%\";\n\n    return (\n      <div\n        id=\"hero-container\"\n        className={this.props.player.isSelectable ? \"hero-container-selected\" : null}\n        onClick={() => this.props.onClick(this.props.player)}\n      >\n        {/* HERO POKEMON INFO BOX */}\n        <div id=\"hero-info-box\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"progress both-progress\">\n              <div\n                className=\"progress-bar bg-danger\"\n                role=\"progressbar\"\n                style={{ width: percentage }}\n                aria-valuemin=\"0\"\n                aria-valuenow=\"75\"\n                aria-valuemax=\"100\"\n              />\n              <div className=\"hp-progress-bar\">\n                {this.props.player.hp}/{this.props.player.maxHp}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* END HERO POKEMON INFO BOX */}\n        <div className=\"action-intention\">\n          {this.expectedAction(this.props.player.me, this.props.player.isSelectable)}\n        </div>\n        {/* HERO POKEMON AVATAR PICTURE */}\n        <div className=\"avatar-box\">\n          <Avatar\n            faint={this.props.player.faint}\n            isHit={this.props.player.isHit}\n            logoName={this.props.player.name.toLowerCase()}\n            className={`avatar mt-5 ${this.props.player.isSelectable ? \"hero-hover-selected\" : \"\"}`}\n          />\n          {!this.props.player.faint && _.map(this.props.player.hot, ({amount}, index) => (\n            <span key={index} className=\"small avatar-effect\">{amount}<i className=\"fas fa-medkit\"/></span>\n          ))}\n          {!this.props.player.faint && _.map(this.props.player.dot, ({amount}, index) => (\n            <span key={index} className=\"small avatar-effect\">{amount}<i className=\"fas fa-burn\"/></span>\n          ))}\n        </div>\n        {/* END HERO POKEMON AVATAR PICTURE */}\n      </div>\n    );\n  }\n}\n\nPlayerBox.propTypes = {\n  player: PropTypes.shape({\n    name: PropTypes.string,\n    me: PropTypes.bool,\n    level: PropTypes.number,\n    hp: PropTypes.number,\n    maxHp: PropTypes.number,\n    faint: PropTypes.bool,\n    isHit: PropTypes.bool,\n    isSelectable: PropTypes.bool,\n    actions: PropTypes.array,\n    dot: PropTypes.array,\n    hot: PropTypes.array,\n  }),\n  onClick: PropTypes.func,\n}\n\nexport default PlayerBox;\n","import _ from \"lodash\";\n\n// When a player heal an other player (or himself)\nexport const playerHealAction = (players, playerHeal, action) => {\n  let hotMessage = \"\";\n  for (let i = 0; i < players.length; i++) {\n    players[i] = { ...players[i], isSelectable: false };\n    let hot = [...players[i].hot];\n    let newHp = players[i].hp;\n\n    if (playerHeal.name === players[i].name && action.effect === \"heal\") {\n      newHp = (players[i].hp + action.amount) < players[i].maxHp\n        ? players[i].hp + action.amount\n        : players[i].maxHp\n      ;\n    }\n    if (playerHeal.name === players[i].name && action.effect === \"hot\") {\n      hotMessage = ` pendant ${action.duration} tours`;\n      hot = [\n        ...players[i].hot,\n        {amount: action.amount, duration: action.duration}\n      ];\n    }\n\n    players[i] = {...players[i], hp: newHp, hot};\n  }\n\n  const textMessageOne = `${_.find(players, 'me').name}\n   utilise ${action.name} pour soigner ${playerHeal.name} de ${action.amount}pts de vie${hotMessage}!`;\n\n  return {players, textMessageOne}\n}\n\n// When a player move from the battle\nexport const playerMovementAction = (players, playerMove) => {\n  let positionToAdd = 0;\n\n  for (let i = 0; i < players.length; i++) {\n    players[i] = { ...players[i], isSelectable: false };\n    if (playerMove.name === players[i].name) {\n      positionToAdd = i;\n    }\n  }\n\n  // Need know if front or behind the player selected\n  positionToAdd = _.find(_.slice(_.cloneDeep(players), 0, positionToAdd + 1), 'me')\n    ? positionToAdd + 1\n    : positionToAdd\n  ;\n  // cut on 2 array\n  const startingPlayers = _.slice(_.cloneDeep(players), 0, positionToAdd);\n  const endingPlayers = _.slice(_.cloneDeep(players), positionToAdd);\n  // remove me\n  _.remove(startingPlayers, 'me');\n  _.remove(endingPlayers, 'me');\n  // add me\n  startingPlayers.push(_.find(players, 'me'));\n  players = startingPlayers.concat(endingPlayers);\n\n  const textMessageOne = `${_.find(players, 'me').name} se positionne à la place de ${playerMove.name}.`;\n\n  return {players, textMessageOne}\n}\n\n// When an enemy move a player from the battle\nexport const enemyMovementAction = (players, idPlayerMove, enemy) => {\n  const textMessageOne = `${enemy.name} utilise ${enemy.expectedAction.name} sur ${players[idPlayerMove].name} et lui inflige ${enemy.expectedAction.amount}pts de dégats.`;\n\n  players[idPlayerMove] = {\n    ...players[idPlayerMove],\n    isHit: true,\n    hp: (players[idPlayerMove].hp - enemy.expectedAction.amount <= 0 ? 0 : players[idPlayerMove].hp - enemy.expectedAction.amount)\n  };\n  // Need know if front or behind the player selected\n  const positionToAdd = players.length - 2;\n  // cut on 2 array\n  const startingPlayers = _.slice(_.cloneDeep(players), 0, positionToAdd);\n  const endingPlayers = _.slice(_.cloneDeep(players), positionToAdd);\n  // remove last player\n  _.remove(endingPlayers, {'name': players[idPlayerMove].name});\n  // and add him then\n  startingPlayers.push(players[idPlayerMove]);\n  players = startingPlayers.concat(endingPlayers);\n\n  return {players, textMessageOne}\n}\n\n// When an enemy bloc a skill of a player from the battle\nexport const enemyBlockAction = (players, idPlayerMove, enemy) => {\n  const idSkillBlock = Math.floor(Math.random() * players[idPlayerMove].actions.length)\n  const textMessageOne = `${enemy.name} utilise ${enemy.expectedAction.name} sur ${players[idPlayerMove].name}, lui inflige ${enemy.expectedAction.amount}pts de dégats et lui bloque la compétence ${players[idPlayerMove].actions[idSkillBlock].name} pour ${enemy.expectedAction.duration} tours.`;\n  const actions = [...players[idPlayerMove].actions];\n\n  actions[idSkillBlock] = {\n    ...actions[idSkillBlock],\n    nbBlockedTurns: enemy.expectedAction.duration,\n  }\n\n  players[idPlayerMove] = {\n    ...players[idPlayerMove],\n    isHit: true,\n    hp: (players[idPlayerMove].hp - enemy.expectedAction.amount <= 0 ? 0 : players[idPlayerMove].hp - enemy.expectedAction.amount),\n    actions,\n  };\n\n  return {players, textMessageOne}\n}\n\n// When a user have dot and take damages\nexport const userTakeDot = (user) => {\n  let damages = 0;\n  for(let i = 0; i < user.dot.length; i++) {\n    damages = damages + user.dot[i].amount;\n  }\n\n  user = {\n    ...user,\n    hp: (user.hp - damages <= 0 ? 0 : user.hp - damages),\n  };\n\n  return {user};\n}\n\nexport const userTakeHot = (user) => {\n  let healing = 0;\n  for(let i = 0; i < user.hot.length; i++) {\n    healing = healing + user.hot[i].amount;\n  }\n\n  user = {\n    ...user,\n    hp: (user.hp + healing > user.maxHp ? user.maxHp : user.hp + healing),\n  };\n\n  return {user};\n}\n\n// When a players turn is ended\nexport const playersTurnFinished = (players) => {\n  for(let i = 0; i < players.length; i++) {\n    players[i] = decrementBlockedSkill(players[i]);\n    players[i] = decrementHotAndDot(players[i]);\n  }\n\n  return players;\n}\n\n// When an enemy turn is ended\nexport const enemyTurnFinished = (enemy) => {\n  return decrementHotAndDot(enemy);\n}\n\n// When a turn is ended and decrement all blocked skills\nexport const decrementBlockedSkill = (user) => {\n  for(let j = 0; j < user.actions.length; j++) {\n    user.actions[j].nbBlockedTurns = user.actions[j].nbBlockedTurns === 0 ? 0 : user.actions[j].nbBlockedTurns - 1;\n  }\n\n  return user;\n}\n\n// To decrement all HOT and DOT\nexport const decrementHotAndDot = (user) => {\n  // HOT\n  for(let j = 0; j < user.hot.length; j++) {\n    user.hot[j].duration = user.hot[j].duration - 1;\n  }\n  user.hot = _.filter(user.hot, aHot => {\n    return aHot.duration > 0;\n  });\n\n  // DOT\n  for(let j = 0; j < user.dot.length; j++) {\n    user.dot[j].duration = user.dot[j].duration - 1;\n  }\n  user.dot = _.filter(user.dot, aDot => {\n    return aDot.duration > 0;\n  });\n\n  return user;\n}\n\n// When an enemy select a player\nexport const selectPlayer = (players, actionEffect) => {\n  let playersToKeep = [];\n  for (let i = 0; i < players.length; i++) {\n    if (players[i].hp > 0) {\n      playersToKeep.push(i);\n    }\n  }\n\n  const num = actionEffect === \"melee\" || actionEffect === \"movement\"\n    ? _.last(playersToKeep)\n    : Math.floor(Math.random() * players.length)\n  ;\n\n  return (_.includes(playersToKeep, num)) ? num : selectPlayer(players, actionEffect);\n}","export const characters = {\n  players: [\n    {\n      name: \"Pikachu\",\n      me: false,\n      level: 50,\n      hp: 300,\n      maxHp: 300,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 30, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Eclair continue\", amount: 40, effect: \"dot\", duration: 3, nbBlockedTurns: 0},\n        {name: \"Soin éclair\", amount: 100, effect: \"heal\", nbBlockedTurns: 0},\n        {name: \"Soin éclair continue\", amount: 50, effect: \"hot\", duration: 3, nbBlockedTurns: 0},\n        {name: \"Méga tonnerre\", amount: 100, effect: \"range\", nbBlockedTurns: 0},\n        {name: \"Déplacement\", amount: null, effect: \"movement\", nbBlockedTurns: 0},\n      ],\n      hot: [],\n      dot: [],\n    },\n    {\n      name: \"Emolga\",\n      me: false,\n      level: 45,\n      hp: 250,\n      maxHp: 250,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 10, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Eclair\", amount: 30, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Tonnerre\", amount: 35, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Méga éclair\", amount: 45, effect: \"melee\", nbBlockedTurns: 0},\n      ],\n      hot: [],\n      dot: [],\n    },\n    {\n      name: \"Teddiursa\",\n      me: false,\n      level: 35,\n      hp: 150,\n      maxHp: 150,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 10, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Eclair\", amount: 30, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Tonnerre\", amount: 35, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Méga éclair\", amount: 45, effect: \"melee\", nbBlockedTurns: 0},\n      ],\n      hot: [],\n      dot: [],\n    },\n    {\n      name: \"Togepi\",\n      me: false,\n      level: 40,\n      hp: 200,\n      maxHp: 200,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 10, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Eclair\", amount: 30, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Tonnerre\", amount: 35, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Méga éclair\", amount: 45, effect: \"melee\", nbBlockedTurns: 0},\n      ],\n      hot: [],\n      dot: [],\n    },\n    {\n      name: \"Rondoudou\",\n      me: false,\n      level: 50,\n      hp: 300,\n      maxHp: 300,\n      faint: undefined,\n      isHit: false,\n      isSelectable: false,\n      actions: [\n        {name: \"Morsure\", amount: 10, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Eclair\", amount: 30, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Tonnerre\", amount: 35, effect: \"melee\", nbBlockedTurns: 0},\n        {name: \"Méga éclair\", amount: 45, effect: \"melee\", nbBlockedTurns: 0},\n      ],\n      hot: [],\n      dot: [],\n    },\n  ],\n  enemy: {\n    name: \"Mewtwo\",\n    level: 60,\n    hp: 600,\n    maxHp: 600,\n    faint: undefined,\n    isHit: false,\n    actions: [\n      {name: \"Frappe\", amount: 50, effect: \"melee\"},\n      {name: \"Blocage de l'ombre\", amount: 300, effect: \"dot\", duration: 5},\n      {name: \"Soin de l'ombre\", amount: 50, effect: \"hot\", duration: 3},\n      {name: \"Bouclier de l'ombre\", amount: 50, effect: \"heal\"},\n      {name: \"Poussée du chaos\", amount: 30, effect: \"movement\"},\n      {name: \"Rêve éveillé\", amount: 100, effect: \"range\"},\n      {name: \"Cauchemard\", amount: 200, effect: \"unknown\"},\n    ],\n    hot: [],\n    dot: [],\n    expectedAction: undefined,\n  },\n  textMessageOne: \" \",\n  textMessageTwo: \"\",\n  playerActionSelectable: undefined,\n  round: 1,\n  gameOver: false\n};","import React, { Component } from 'react';\nimport \"./animate.css\";\nimport \"./bootstrap.css\";\nimport \"./App.css\";\nimport TextBox from \"./Components/TextBox\";\nimport Actions from \"./Components/Actions\";\nimport EnemyBox from \"./Components/EnemyBox\";\nimport PlayerBox from \"./Components/PlayerBox\";\nimport _ from 'lodash';\nimport {\n  enemyTurnFinished, enemyMovementAction, enemyBlockAction,\n  playersTurnFinished, playerHealAction, playerMovementAction,\n  selectPlayer, userTakeDot, userTakeHot,\n} from \"./utils/helper\";\nimport { characters } from \"./utils/characters\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = characters;\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState(\n        () => {\n          return {\n            textMessageOne: `${this.state.enemy.name} apparait!`,\n            enemy: {\n              ...this.state.enemy,\n              faint: null,\n            },\n          };\n        },\n        () => {\n          setTimeout(() => {\n            const players = [...this.state.players];\n            for (let i = 0; i < this.state.players.length; i++) {\n              players[i] = { ...players[i], faint: null };\n              // Me\n              if (i === 0) {\n                players[i] = { ...players[i], me: true };\n              }\n            }\n\n            this.setState(\n              {\n                textMessageOne: \"Vous entrez pour le combattre !\",\n                players\n              },\n              () => {\n                setTimeout(() => {\n                  this.setState({\n                    textMessageOne: \"\"\n                  });\n\n                  this.nextEnemyAction();\n                }, 3000);\n              }\n            );\n          }, 3000);\n        }\n      );\n    }, 1000);\n  }\n\n  nextEnemyAction() {\n    const enemyAction = Math.floor(Math.random() * this.state.enemy.actions.length);\n\n    this.setState({\n      enemy: {\n        ...this.state.enemy,\n        expectedAction: this.state.enemy.actions[enemyAction],\n      }\n    })\n  }\n\n  endTurn() {\n    const players = [...this.state.players];\n    const enemy = this.state.enemy;\n\n    // 1 - DOT ENEMY\n    if (enemy.dot.length > 0) {\n      let { user } = userTakeDot(enemy);\n      this.setState({\n        enemy: user,\n      });\n    }\n\n    if (this.checkIfEnemyAlive()) {\n      // 2 - DOT PLAYERS\n      for(let i = 0; i < players.length; i++) {\n        if (players[i].dot.length > 0 && players[i].hp > 0) {\n          let { user } = userTakeDot(this.state.players[i]);\n          players[i] = user;\n          this.setState({\n            players,\n          }, () => {\n              setTimeout(() => {\n                this.checkIfPlayerAlive(i);\n              }, 3000)\n            }\n          );\n        }\n      }\n\n      // 3 - HOT ENEMY\n      if (enemy.hot.length > 0) {\n        let { user } = userTakeHot(enemy);\n        this.setState({\n          enemy: user,\n        });\n      }\n\n      // 4 - HOT PLAYERS\n      for(let i = 0; i < players.length; i++) {\n        if (players[i].dot.length > 0) {\n          let { user } = userTakeHot(this.state.players[i]);\n          players[i] = user;\n          this.setState({\n            players,\n          });\n        }\n      }\n\n      // 5 - DECREMENT ALL DOT/HOT/BLOCKED SKILLS\n      this.setState({\n        // textMessageOne: \"\",\n        round: this.state.round + 1,\n        players: playersTurnFinished(this.state.players),\n        enemy: enemyTurnFinished(this.state.enemy),\n      });\n      this.nextEnemyAction();\n    }\n  }\n\n  checkIfPlayerAlive(idPlayerSelected) {\n    const players = [...this.state.players];\n\n    if (players[idPlayerSelected].hp === 0) {\n      players[idPlayerSelected] = {...players[idPlayerSelected], faint: true, isHit: false};\n      this.setState(\n        {\n          textMessageOne: `${players[idPlayerSelected].name} a été terrassé.`,\n          players\n        },\n        () => {\n          setTimeout(() => {\n            //All players dead\n            const allPlayersDead = _.find(players, (player) => {\n              return player.hp > 0\n            });\n            if (!allPlayersDead) {\n              this.setState(\n                {\n                  textMessageOne: `Toute l'équipe a perdu.`,\n                  textMessageTwo: `${this.state.enemy.name} a gagné!`,\n                },\n                () => {\n                  setTimeout(() => {\n                    this.setState({\n                      gameOver: true\n                    });\n                  }, 3000);\n                }\n              );\n            } else {\n              this.setState({\n                textMessageOne: \"\",\n              })\n            }\n          }, 3000);\n        }\n      );\n    } else {\n      players[idPlayerSelected] = {...players[idPlayerSelected], isHit: false, faint: false};\n      this.setState({\n        textMessageOne: \"\",\n        players,\n      });\n    }\n  }\n\n  checkIfEnemyAlive() {\n    if (this.state.enemy.hp === 0) {\n      this.setState(\n        {\n          textMessageOne: `${this.state.enemy.name} a perdu.`,\n          textMessageTwo: `Vous avez gagné!`,\n          enemy: {\n            ...this.state.enemy,\n            faint: true,\n            isHit: false,\n          },\n        },\n        () => {\n          setTimeout(() => {\n            this.setState({\n              gameOver: true\n            });\n          }, 3000);\n        }\n      );\n      return false;\n    }\n\n    return true;\n  }\n\n  enemyTurn = () => {\n    const { amount, name, effect, duration } = this.state.enemy.expectedAction;\n    const playerSelected = selectPlayer(this.state.players, effect);\n\n    if (this.checkIfEnemyAlive()) {\n      if (effect === \"heal\") {\n        this.setState(\n          {\n            textMessageOne: `${this.state.enemy.name} se soigne pour ${amount}pts de vie.`,\n            enemy: {\n              ...this.state.enemy,\n              hp: this.state.enemy.hp + amount,\n            },\n          },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                textMessageOne: \"\"\n              });\n              this.endTurn()\n            }, 3000);\n          }\n        );\n      } else if (effect === \"hot\") {\n        this.setState(\n          {\n            textMessageOne: `${this.state.enemy.name} se soignera de ${amount}pts de vie à la fin des ${duration} prochains tours.`,\n            enemy: {\n              ...this.state.enemy,\n              hot: [\n                ...this.state.enemy.hot,\n                {amount, duration}\n              ],\n            },\n          },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                textMessageOne: \"\"\n              });\n              this.endTurn()\n            }, 3000);\n          }\n        );\n      } else if (effect === \"movement\") {\n        let { players, textMessageOne } = enemyMovementAction(this.state.players, playerSelected, this.state.enemy);\n        this.setState(\n          {\n            textMessageOne,\n            players\n          },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                textMessageOne: \"\"\n              });\n              this.checkIfPlayerAlive(playerSelected);\n              this.endTurn()\n            }, 3000);\n          }\n        );\n      } else if (effect === \"skill_block\") {\n        let {players, textMessageOne} = enemyBlockAction(this.state.players, playerSelected, this.state.enemy);\n        this.setState(\n          {\n            textMessageOne,\n            players\n          },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                textMessageOne: \"\"\n              });\n              this.checkIfPlayerAlive(playerSelected);\n              this.endTurn()\n            }, 3000);\n          }\n        );\n      } else if (effect === \"dot\") {\n        this.setState(\n          prevState => {\n            const players = [...this.state.players];\n\n            players[playerSelected] = {\n              ...players[playerSelected],\n              isHit: true,\n              dot: [\n                ...prevState.players[playerSelected].dot,\n                {amount, duration}\n              ],\n            };\n\n            return {\n              players,\n              textMessageOne: `${\n                this.state.enemy.name\n              } utilise ${name} sur ${this.state.players[playerSelected].name} ce qui fera ${amount}pts de dégats à la fin des ${duration} prochains tours!`\n            };\n          },\n          () => {\n            setTimeout(() => {\n              this.endTurn()\n            }, 3000);\n          }\n        );\n      } else {\n        this.setState(\n          prevState => {\n            const players = [...this.state.players];\n\n            players[playerSelected] = {\n              ...players[playerSelected],\n              isHit: true,\n              hp: (prevState.players[playerSelected].hp - amount <= 0 ? 0 : prevState.players[playerSelected].hp - amount),\n            };\n\n            return {\n              players,\n              textMessageOne: `${\n                this.state.enemy.name\n              } utilise ${name} sur ${this.state.players[playerSelected].name} pour ${amount}pts de dégats!`\n            };\n          },\n          () => {\n            setTimeout(() => {\n              this.checkIfPlayerAlive(playerSelected);\n              this.endTurn()\n            }, 3000);\n          }\n        );\n      }\n    }\n  }\n\n  handleClickOnPlayerToAction = (player) => {\n    const { playerActionSelectable } = this.state;\n\n    if (playerActionSelectable.effect === \"heal\" || playerActionSelectable.effect === \"hot\") {\n      let { players, textMessageOne } = playerHealAction([...this.state.players], player, playerActionSelectable);\n      this.setState({\n        textMessageOne,\n        players\n      });\n    } else if (playerActionSelectable.effect === \"movement\") {\n      let { players, textMessageOne } = playerMovementAction([...this.state.players], player);\n      this.setState({\n        textMessageOne,\n        players\n      });\n    }\n    //2 - ENEMY TURN\n    setTimeout(() => {\n      this.setState({\n        playerActionSelectable: undefined,\n      });\n      this.enemyTurn();\n    }, 3000);\n  }\n\n  handleClickOnActionBar = (action) => {\n    const { effect, name, amount, duration } = action;\n\n    // 1 - ATTACK\n    if (effect === \"melee\" || effect === \"range\" || effect === \"dot\") {\n      // 1.1 - PLAYER ACTION\n      let dot = [...this.state.enemy.dot];\n      let hp = (this.state.enemy.hp - amount <= 0 ? 0 : this.state.enemy.hp - amount);\n      let textMessageOne = `${_.find(this.state.players, 'me').name} utilise ${name} pour ${amount}pts de dégats!`;\n\n      if (effect === \"dot\") {\n        dot = [\n          ...this.state.enemy.dot,\n          {amount, duration}\n        ];\n        hp = this.state.enemy.hp;\n        textMessageOne = `${_.find(this.state.players, 'me').name} utilise ${name} ce qui infligera ${amount}pts de dégats à la fin des ${duration} prochains tours!`;\n      }\n\n      this.setState({\n        enemy: {\n          ...this.state.enemy,\n          hp,\n          isHit: true,\n          dot,\n        },\n        textMessageOne\n      });\n      // 1.2 - ENEMY ACTION\n      setTimeout(() => {\n        // Enemy turn\n        this.setState({\n          enemy: {\n            ...this.state.enemy,\n            isHit: false,\n            faint: false,\n          }\n        });\n        this.enemyTurn();\n      }, 3000);\n    // 2 - HEAL\n    } else if (effect === \"heal\" || effect === \"hot\") {\n      // 2.1 - PLAYER ACTION\n      const players = [...this.state.players];\n      for (let i = 0; i < this.state.players.length; i++) {\n        if(this.state.players[i].hp > 0) {\n          players[i] = { ...players[i], isSelectable: true };\n        }\n      }\n      this.setState({\n        textMessageOne: \"Veuillez selectionner un joueur à soigner.\",\n        playerActionSelectable: action,\n        players\n      });\n    // 3 - MOVEMENT\n    } else if (effect === \"movement\") {\n      // 3.1 - PLAYER ACTION\n      const players = [...this.state.players];\n      for (let i = 0; i < this.state.players.length; i++) {\n        if(this.state.players[i] !== _.find(this.state.players, 'me') && this.state.players[i].hp > 0) {\n          players[i] = { ...players[i], isSelectable: true };\n        }\n      }\n      this.setState({\n        textMessageOne: \"Veuillez selectionner la place que vous souhaitez.\",\n        playerActionSelectable: action,\n        players\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row row h-100 justify-content-center align-items-center\">\n          <div className=\"col-sm-12\">\n            {/* BATTLE SCREEN CONTAINER */}\n            <div id=\"battle-container\" className=\"px-2 mx-auto\">\n              <div id=\"turn-text-number\"><i className=\"fas fa-dice\"/> Tour {this.state.round}</div>\n              <div className=\"all-players-box\">\n                {_.map(this.state.players, player => (\n                  <PlayerBox\n                    key={player.name}\n                    player={player}\n                    onClick={player.isSelectable ? this.handleClickOnPlayerToAction : () => { return null }}\n                  />\n                ))}\n\n                <EnemyBox\n                  enemy={this.state.enemy}\n                  expectedAction={this.state.enemy.expectedAction}\n                />\n              </div>\n\n              {/* TEXT BOX SECTION */}\n              <div id=\"text-box\">\n                <div id=\"text-box-content\">\n                  {this.state.textMessageOne !== \"\" &&\n                  this.state.gameOver === false && (\n                    <TextBox\n                      messageOne={this.state.textMessageOne}\n                      messageTwo={this.state.textMessageTwo}\n                    />\n                  )}\n\n                  {this.state.textMessageOne === \"\" &&\n                  this.state.gameOver === false &&\n                  Object.keys(_.find(this.state.players, 'me').actions).map((key, index) => {\n                    return (\n                      <Actions\n                        key={key}\n                        frontPlayer={_.find(this.state.players, 'me') === _.last(this.state.players)}\n                        action={_.find(this.state.players, 'me').actions[key]}\n                        onClick={this.handleClickOnActionBar}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n              {/* END TEXT BOX SECTION */}\n            </div>\n            {/* END BATTLE SCREEN CONTAINER */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}