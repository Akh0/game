{"version":3,"sources":["Components/TextBox.js","Components/Actions.js","Components/Avatar.js","Components/EnemyBox.js","Components/PlayerBox.js","Components/PlayAgain.js","App.js","index.js"],"names":["TextBox","className","this","props","messageOne","messageTwo","Component","Actions","amount","effect","action","name","onClick","expectedEffect","Avatar","faint","isHit","undefined","animation","src","process","logoName","alt","EnemyBox","percentage","enemyHP","enemyMaxHP","id","enemyName","role","style","width","aria-valuemin","aria-valuemax","expectedAction","enemyExpectedAction","enemyFaint","enemyIsHit","toLowerCase","PlayerBox","me","isSelectable","player","hp","maxHp","aria-valuenow","PlayAgain","handlePlayAgain","App","startingSequence","setTimeout","setState","textMessageOne","state","enemy","players","i","length","nextEnemyAction","enemyTurn","playerSelected","selectPlayer","enemyActionAmount","enemyActionName","textMessageTwo","gameOver","prevState","_","find","round","handleClickOnPlayer","newHp","playerActionSelectable","handleActionClick","level","actions","enemyAction","Math","floor","random","playersToExclude","push","num","includes","map","key","enemyLevel","Object","keys","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1692d5a1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TextBox extends Component {\n  render() {\n    return (\n      <div className=\"battle-text-content\">\n        <p>\n          {this.props.messageOne} <br /> {this.props.messageTwo}\n        </p>\n      </div>\n    );\n  }\n}\n\nTextBox.propTypes = {\n  messageOne: PropTypes.string,\n  messageTwo: PropTypes.string,\n}\n\nexport default TextBox;\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Actions extends Component {\r\n  expectedEffect(amount, effect) {\r\n    switch (effect) {\r\n      case \"attack\":\r\n        return <><i className=\"fas fa-fist-raised\"/> <span className=\"small\">{amount}</span></>;\r\n      case \"defense\":\r\n        return <><i className=\"fas fa-shield-alt\"/> <span className=\"small\">{amount}</span></>;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, amount, effect } = this.props.action;\r\n    return (\r\n      <div className=\"attack-container\">\r\n        <div>\r\n          <span className=\"move-pointer\" onClick={() => this.props.onClick(this.props.action)}>\r\n            {name} {this.expectedEffect(amount, effect)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nActions.propTypes = {\r\n  detail: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    amount: PropTypes.number,\r\n    effect: PropTypes.string,\r\n  }),\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Actions;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Avatar extends Component {\n  animation() {\n    const { faint, isHit } = this.props;\n\n    if (isHit === true) {\n      return \"animated headShake\";\n    }\n    if (faint === true) {\n      return \"animated fadeOut slow\";\n    }\n    if (faint === null) {\n      return \"animated fadeInUp\";\n    }\n    if (faint === undefined) {\n      return \"hide\";\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.animation()}>\n        <img className={this.props.className} src={process.env.PUBLIC_URL+\"/img/\"+this.props.logoName+\".png\"} alt={this.props.logoName} />\n      </div>\n    );\n  }\n}\n\nAvatar.propTypes = {\n  faint: PropTypes.bool,\n  logoName: PropTypes.string,\n  className: PropTypes.string,\n}\n\nexport default Avatar;\n","import React, { Component } from \"react\";\nimport Avatar from \"./Avatar\";\n\nexport class EnemyBox extends Component {\n  expectedAction(action) {\n    if (action !== undefined) {\n      switch (action.effect) {\n        case \"attack\":\n          return <><i className=\"fas fa-fist-raised\"/> <span className=\"small\">{action.amount}</span></>;\n        case \"defense\":\n          return <i className=\"fas fa-shield-alt\"/>;\n        case \"unknown\":\n          return <i className=\"fas fa-question\"/>;\n        default:\n          return <br />;\n      }\n    } else {\n      return <br />;\n    }\n  }\n\n  render() {\n    // calc enemy progress bar percentage based on HP\n    let percentage = (this.props.enemyHP / this.props.enemyMaxHP) * 100 + \"%\";\n\n    return (\n      <div id=\"enemy-container\">\n        {/* ENEMY POKEMON INFO BOX */}\n        <div id=\"enemy-info-box\">\n          <div className=\"justify-content-between align-items-center\">\n            <h2>{this.props.enemyName}</h2>\n          </div>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"progress both-progress\">\n              <div\n                className=\"progress-bar bg-danger\"\n                role=\"progressbar\"\n                style={{ width: percentage }}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n              />\n              <div className=\"hp-progress-bar\">\n                <span>{this.props.enemyHP}/{this.props.enemyMaxHP}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* END ENEMY POKEMON INFO BOX */}\n        <div className=\"action-intention\">\n          {this.expectedAction(this.props.enemyExpectedAction)}\n        </div>\n        {/* ENEMY POKEMON AVATAR PICTURE */}\n        <div className=\"mt-4 mr-sm-4 avatar-box\">\n          <Avatar\n            faint={this.props.enemyFaint}\n            isHit={this.props.enemyIsHit}\n            logoName={this.props.enemyName.toLowerCase()}\n            className=\"avatar ml-3 mt-3\"\n          />\n          <div className=\"oval\" />\n        </div>\n        {/* END ENEMY POKEMON AVATAR PICTURE */}\n      </div>\n    );\n  }\n}\n\nexport default EnemyBox;\n","import React, { Component } from \"react\";\nimport Avatar from \"./Avatar\";\nimport PropTypes from \"prop-types\";\n\nexport class PlayerBox extends Component {\n  expectedAction(me, isSelectable) {\n    if (isSelectable) {\n      return <i className=\"far fa-hand-point-down\"/>;\n    } else if (me) {\n      return <i className=\"fas fa-long-arrow-alt-down\"/>;\n    } else {\n      return <br />;\n    }\n  }\n\n  render() {\n    // calc player progress bar percentage based on HP\n    let percentage = (this.props.player.hp / this.props.player.maxHp) * 100 + \"%\";\n\n    return (\n      <div\n        id=\"hero-container\"\n        className={this.props.player.isSelectable ? \"hero-container-selected\" : null}\n        onClick={() => this.props.onClick(this.props.player)}\n      >\n        {/* HERO POKEMON INFO BOX */}\n        <div id=\"hero-info-box\">\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <div className=\"progress both-progress\">\n              <div\n                className=\"progress-bar bg-danger\"\n                role=\"progressbar\"\n                style={{ width: percentage }}\n                aria-valuemin=\"0\"\n                aria-valuenow=\"75\"\n                aria-valuemax=\"100\"\n              />\n              <div className=\"hp-progress-bar\">\n                {this.props.player.hp}/{this.props.player.maxHp}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* END HERO POKEMON INFO BOX */}\n        <div className=\"action-intention\">\n          {this.expectedAction(this.props.player.me, this.props.player.isSelectable)}\n        </div>\n        {/* HERO POKEMON AVATAR PICTURE */}\n        <div className=\"mr-sm-4 avatar-box\">\n          <Avatar\n            faint={this.props.player.faint}\n            isHit={this.props.player.isHit}\n            logoName={this.props.player.name.toLowerCase()}\n            className=\"avatar mr-3 mt-5\"\n          />\n          <div className={`oval ${this.props.player.isSelectable ? \"hero-oval-selected\" : null}`} />\n        </div>\n        {/* END HERO POKEMON AVATAR PICTURE */}\n      </div>\n    );\n  }\n}\n\nPlayerBox.propTypes = {\n  player: PropTypes.shape({\n    name: PropTypes.string,\n    me: PropTypes.bool,\n    level: PropTypes.number,\n    hp: PropTypes.number,\n    maxHp: PropTypes.number,\n    faint: PropTypes.bool,\n    isHit: PropTypes.bool,\n    isSelectable: PropTypes.bool,\n    actions: PropTypes.array,\n  }),\n  onClick: PropTypes.func,\n}\n\nexport default PlayerBox;\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PlayAgain extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"battle-text-content\">\r\n        <p id=\"play-again-text\" onClick={() => this.props.handlePlayAgain()}>\r\n          Cliquez ici pour recommencer une partie\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPlayAgain.propTypes = {\r\n  handlePlayAgain: PropTypes.func,\r\n}\r\n\r\nexport default PlayAgain;\r\n","import React, { Component } from 'react';\nimport \"./animate.css\";\nimport \"./bootstrap.css\";\nimport \"./App.css\";\nimport TextBox from \"./Components/TextBox\";\nimport Actions from \"./Components/Actions\";\nimport EnemyBox from \"./Components/EnemyBox\";\nimport PlayerBox from \"./Components/PlayerBox\";\nimport PlayAgain from \"./Components/PlayAgain\";\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      players: [\n        {\n          name: \"Pikachu\",\n          me: false,\n          level: 50,\n          hp: 300,\n          maxHp: 300,\n          faint: undefined,\n          isHit: false,\n          isSelectable: false,\n          actions: [\n            { name: \"Morsure\", amount: 10, effect: \"attack\" },\n            { name: \"Eclair\", amount: 30, effect: \"attack\" },\n            { name: \"Soin éclair\", amount: 100, effect: \"defense\" },\n            { name: \"Méga tonnerre\", amount: 50, effect: \"attack\" },\n          ],\n        },\n        {\n          name: \"Emolga\",\n          me: false,\n          level: 45,\n          hp: 250,\n          maxHp: 250,\n          faint: undefined,\n          isHit: false,\n          isSelectable: false,\n          actions: [\n            { name: \"Morsure\", amount: 10, effect: \"attack\" },\n            { name: \"Eclair\", amount: 30, effect: \"attack\" },\n            { name: \"Tonnerre\", amount: 35, effect: \"attack\" },\n            { name: \"Méga éclair\", amount: 45, effect: \"attack\" },\n          ],\n        },\n        {\n          name: \"Teddiursa\",\n          me: false,\n          level: 35,\n          hp: 150,\n          maxHp: 150,\n          faint: undefined,\n          isHit: false,\n          isSelectable: false,\n          actions: [\n            { name: \"Morsure\", amount: 10, effect: \"attack\" },\n            { name: \"Eclair\", amount: 30, effect: \"attack\" },\n            { name: \"Tonnerre\", amount: 35, effect: \"attack\" },\n            { name: \"Méga éclair\", amount: 45, effect: \"attack\" },\n          ],\n        },\n        {\n          name: \"Togepi\",\n          me: false,\n          level: 40,\n          hp: 200,\n          maxHp: 200,\n          faint: undefined,\n          isHit: false,\n          isSelectable: false,\n          actions: [\n            { name: \"Morsure\", amount: 10, effect: \"attack\" },\n            { name: \"Eclair\", amount: 30, effect: \"attack\" },\n            { name: \"Tonnerre\", amount: 35, effect: \"attack\" },\n            { name: \"Méga éclair\", amount: 45, effect: \"attack\" },\n          ],\n        },\n        {\n          name: \"Rondoudou\",\n          me: false,\n          level: 50,\n          hp: 300,\n          maxHp: 300,\n          faint: undefined,\n          isHit: false,\n          isSelectable: false,\n          actions: [\n            { name: \"Morsure\", amount: 10, effect: \"attack\" },\n            { name: \"Eclair\", amount: 30, effect: \"attack\" },\n            { name: \"Tonnerre\", amount: 35, effect: \"attack\" },\n            { name: \"Méga éclair\", amount: 45, effect: \"attack\" },\n          ],\n        },\n      ],\n      enemy: {\n        name: \"Mewtwo\",\n        level: 60,\n        hp: 600,\n        maxHp: 600,\n        faint: undefined,\n        isHit: false,\n        actions: [\n          { name: \"Frappe\", amount: 50, effect: \"attack\" },\n          { name: \"Bouclier de l'ombre\", amount: 50, effect: \"defense\" },\n          { name: \"Rêve éveillé\", amount: 150, effect: \"unknown\" },\n          { name: \"Cauchemard\", amount: 200, effect: \"unknown\" },\n        ],\n        expectedAction: undefined,\n      },\n      textMessageOne: \" \",\n      textMessageTwo: \"\",\n      playerActionSelectable: undefined,\n      round: 1,\n      gameOver: false\n    };\n  }\n\n  componentDidMount() {\n    this.startingSequence();\n  }\n\n  startingSequence = () => {\n    setTimeout(() => {\n      this.setState(\n        () => {\n          return {\n            textMessageOne: `${this.state.enemy.name} apparait!`,\n            enemy: {\n              ...this.state.enemy,\n              faint: null,\n            },\n          };\n        },\n        () => {\n          setTimeout(() => {\n            const players = [...this.state.players];\n            for (let i = 0; i < this.state.players.length; i++) {\n              players[i] = { ...players[i], faint: null };\n              // Me\n              if (i === 0) {\n                players[i] = { ...players[i], me: true };\n              }\n            }\n\n            this.setState(\n              {\n                textMessageOne: \"Vous entrez pour le combattre !\",\n                players\n              },\n              () => {\n                setTimeout(() => {\n                  this.setState({\n                    textMessageOne: \"\"\n                  });\n\n                  this.nextEnemyAction();\n                }, 3000);\n              }\n            );\n          }, 3000);\n        }\n      );\n    }, 1000);\n  }\n\n  nextEnemyAction() {\n    const enemyAction = Math.floor(Math.random() * this.state.enemy.actions.length);\n\n    this.setState({\n      enemy: {\n        ...this.state.enemy,\n        expectedAction: this.state.enemy.actions[enemyAction],\n      }\n    })\n  }\n\n  selectPlayer() {\n    let playersToExclude = [];\n\n    for (let i = 0; i < this.state.players.length; i++) {\n      if (this.state.players[i].hp <= 0) {\n        playersToExclude.push(i);\n      }\n    }\n\n    const num = Math.floor(Math.random() * this.state.players.length);\n\n    return (_.includes(playersToExclude, num)) ? this.selectPlayer() : num;\n  }\n\n  enemyTurn = () => {\n    const playerSelected = this.selectPlayer();\n    const enemyActionAmount = this.state.enemy.expectedAction.amount;\n    const enemyActionName = this.state.enemy.expectedAction.name;\n\n    // first, check if enemy fainted. End Game if they did.\n    if (this.state.enemy.hp === 0) {\n      this.setState(\n        {\n          textMessageOne: `${this.state.enemy.name} a perdu.`,\n          textMessageTwo: `Vous avez gagné!`,\n          enemy: {\n            ...this.state.enemy,\n            faint: true,\n            isHit: false,\n          },\n        },\n        () => {\n          setTimeout(() => {\n            this.setState({\n              gameOver: true\n            });\n          }, 3000);\n        }\n      );\n    } else {\n      // if enemy is still alive, proceed with enemy turn\n      this.setState(\n        prevState => {\n          const players = [...this.state.players];\n          players[playerSelected] = { ...players[playerSelected], isHit: true, hp: (prevState.players[playerSelected].hp - enemyActionAmount <= 0 ? 0 : prevState.players[playerSelected].hp - enemyActionAmount) };\n\n          return {\n            players,\n            textMessageOne: `${\n              this.state.enemy.name\n            } utilise ${enemyActionName} sur ${this.state.players[playerSelected].name} pour ${enemyActionAmount}pts de dégats!`\n          };\n        },\n        () => {\n          setTimeout(() => {\n            const players = [...this.state.players];\n\n            if (this.state.players[playerSelected].hp === 0) {\n              players[playerSelected] = { ...players[playerSelected], faint: true, isHit: false };\n\n              this.setState(\n                {\n                  textMessageOne: `${this.state.players[playerSelected].name} a été terrassé.`,\n                  players\n                },\n                () => {\n                  setTimeout(() => {\n                    //All players dead\n                    const allPlayersDead = _.find(this.state.players, (player) => { return player.hp > 0 });\n                    if (!allPlayersDead) {\n                      this.setState(\n                        {\n                          textMessageOne: `Toute l'équipe a perdu.`,\n                          textMessageTwo: `${this.state.enemy.name} a gagné!`,\n                        },\n                        () => {\n                          setTimeout(() => {\n                            this.setState({\n                              gameOver: true\n                            });\n                          }, 3000);\n                        }\n                      );\n                    } else {\n                      this.setState({\n                        textMessageOne: \"\",\n                        round: this.state.round + 1,\n                      });\n                      this.nextEnemyAction();\n                    }\n                  }, 3000);\n                }\n              );\n            } else {\n              players[playerSelected] = { ...players[playerSelected], isHit: false, faint: false };\n              this.setState({\n                textMessageOne: \"\",\n                round: this.state.round + 1,\n                players\n              });\n              this.nextEnemyAction();\n            }\n          }, 2000);\n        }\n      );\n    }\n  }\n\n  handleClickOnPlayer = (player) => {\n    // 1 - Player click on an other player or himself\n    const players = [...this.state.players];\n    for (let i = 0; i < this.state.players.length; i++) {\n      if(this.state.players[i].hp > 0) {\n        players[i] = { ...players[i], isSelectable: false };\n        if (player.name === players[i].name) {\n          const newHp = (players[i].hp + this.state.playerActionSelectable.amount) < players[i].maxHp ? players[i].hp + this.state.playerActionSelectable.amount : players[i].maxHp;\n          players[i] = { ...players[i], hp: newHp };\n        }\n      }\n    }\n    this.setState({\n      textMessageOne: `${\n        this.state.players[0].name\n      } utilise ${this.state.playerActionSelectable.name} pour soigner ${player.name} de ${this.state.playerActionSelectable.amount}pts de vie!`,\n      players\n    });\n    //2 - ENEMY TURN\n    setTimeout(() => {\n      this.setState({\n        playerActionSelectable: undefined,\n      });\n      this.enemyTurn();\n    }, 3000);\n  }\n\n  handleActionClick = (action) => {\n    const { effect, name, amount } = action;\n    // 1 - ATTACK\n    if (effect === \"attack\") {\n      // 1.1 - PLAYER ACTION\n      this.setState({\n        enemy: {\n          ...this.state.enemy,\n          hp: (this.state.enemy.hp - amount <= 0 ? 0 : this.state.enemy.hp - amount),\n          isHit: true,\n        },\n        textMessageOne: `${\n          this.state.players[0].name\n        } utilise ${name} pour ${amount}pts de dégats!`\n      });\n      // 1.2 - ENEMY ACTION\n      setTimeout(() => {\n        // Enemy turn\n        this.setState({\n          enemy: {\n            ...this.state.enemy,\n            isHit: false,\n            faint: false,\n          }\n        });\n        this.enemyTurn();\n      }, 3000);\n    // 2 - DEFENSE\n    } else if (effect === \"defense\") {\n      // 2.1 - PLAYER ACTION\n      const players = [...this.state.players];\n      for (let i = 0; i < this.state.players.length; i++) {\n        if(this.state.players[i].hp > 0) {\n          players[i] = { ...players[i], isSelectable: true };\n        }\n      }\n      this.setState({\n        textMessageOne: \"Veuillez selectionner un joueur à soigner.\",\n        playerActionSelectable: action,\n        players\n      });\n    }\n  }\n\n  handlePlayAgain = () => {\n    const players = [...this.state.players];\n    for (let i = 0; i < this.state.players.length; i++) {\n      players[i] = { ...players[i], faint: false, isHit: false, hp: this.state.players[i].maxHp };\n    }\n\n    this.setState({\n      enemy: {\n        ...this.state.enemy,\n        hp: this.state.enemy.maxHp,\n        faint: false,\n        isHit: false,\n      },\n      gameOver: false,\n      textMessageOne: \"\",\n      textMessageTwo: \"\",\n      round: 1,\n      players\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row row h-100 justify-content-center align-items-center\">\n          <div className=\"col-sm-12\">\n            {/* BATTLE SCREEN CONTAINER */}\n            <div id=\"battle-container\" className=\"px-2 mx-auto\">\n              <div id=\"turn-text\"><i className=\"fas fa-dice\"/> Tour {this.state.round}</div>\n              <div className=\"all-players-box\">\n                {_.map(this.state.players, player => (\n                  <PlayerBox\n                    key={player.name}\n                    player={player}\n                    onClick={player.isSelectable ? this.handleClickOnPlayer : () => { return null }}\n                  />\n                ))}\n\n                <EnemyBox\n                  enemyName={this.state.enemy.name}\n                  enemyLevel={this.state.enemy.level}\n                  enemyHP={this.state.enemy.hp}\n                  enemyMaxHP={this.state.enemy.maxHp}\n                  enemyFaint={this.state.enemy.faint}\n                  enemyIsHit={this.state.enemy.isHit}\n                  enemyExpectedAction={this.state.enemy.expectedAction}\n                />\n              </div>\n\n              {/* TEXT BOX SECTION */}\n              <div id=\"text-box\">\n                <div id=\"text-box-content\">\n                  {this.state.textMessageOne !== \"\" &&\n                  this.state.gameOver === false && (\n                    <TextBox\n                      messageOne={this.state.textMessageOne}\n                      messageTwo={this.state.textMessageTwo}\n                    />\n                  )}\n\n                  {this.state.textMessageOne === \"\" &&\n                  this.state.gameOver === false &&\n                  Object.keys(this.state.players[0].actions).map((key, index) => {\n                    return (\n                      <Actions\n                        key={key}\n                        index={index}\n                        action={this.state.players[0].actions[key]}\n                        onClick={this.handleActionClick}\n                      />\n                    );\n                  })}\n\n                  {this.state.gameOver === true && (\n                    <PlayAgain handlePlayAgain={this.handlePlayAgain} />\n                  )}\n                </div>\n              </div>\n              {/* END TEXT BOX SECTION */}\n            </div>\n            {/* END BATTLE SCREEN CONTAINER */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}